#Keycloak
quarkus.oidc.application-type=WEB_APP
quarkus.oidc.roles.source=accesstoken

quarkus.keycloak.devservices.realm-path=quarkus-initial.json
quarkus.keycloak.devservices.show-logs=true
quarkus.keycloak.devservices.realm-name=quarkus2

quarkus.oidc.client-id=core-banking
quarkus.oidc.credentials.secret=secret

quarkus.oidc.tls.verification=none

#Logujeme requesty a response
quarkus.http.access-log.enabled=true

#Nastavenie autorizaƒçnej politiky
quarkus.keycloak.policy-enforcer.enable=true
quarkus.keycloak.policy-enforcer.lazy-load-paths=true



quarkus.http.auth.policy.role-policy1.roles-allowed=user,admin

quarkus.http.auth.policy.role-policy2.roles-allowed=user

quarkus.http.auth.permission.roles1.paths=/admin.html
quarkus.http.auth.permission.roles1.policy=role-policy1

quarkus.http.auth.permission.roles2.paths=/*
quarkus.http.auth.permission.roles2.policy=role-policy1




#Detection,ingestion

#viem ACR napojit na rolu?
### asi pouzijeme toto quarkus.oidc.roles.role-claim-path a namapujeme to na acr


# Uncomment to trust self signed certificates if they are presented by the Kubernetes API server
quarkus.kubernetes-client.trust-certs=true

# ImagePullPolicy to use
quarkus.openshift.image-pull-policy=IfNotPresent

# Labels and Annotations
quarkus.openshift.labels."app.openshift.io/runtime"=camel
quarkus.openshift.annotations."app.openshift.io/connects-to"=tf-server

quarkus.native.resources.includes=camel/routes.xml
camel.main.routes-include-pattern=camel/routes.xml

camel.main.source-location-enabled=true
camel.main.name=test

# quarkus.ssl.native=true
# quarkus.http.ssl.certificate.key-store-file=../edge-feeder/tls/truststore.jks
# quarkus.http.ssl-port=8443
# quarkus.http.insecure-requests=disabled
quarkus.http.host=0.0.0.0

# Configurable training options
quarkus.openshift.mounts.volume1.path=/deployments/config
quarkus.openshift.config-map-volumes.volume1.config-map-name=shopper-training-options

# EDGE identifier
edge.id=${KUBERNETES_NAMESPACE}
%dev.edge.id=edge1

# MQTT connectivity
# mqtt.uri = paho:detection/+?brokerUrl=tcp://broker-amq-mqtt:1883
mqtt.uri = paho:detection/+?brokerUrl=tcp://broker-amq-mqtt-0-svc:1883
%dev.mqtt.uri = paho:detection/+

# mqtt.uri.monitor = paho:monitor?brokerUrl=tcp://broker-amq-mqtt:1883
mqtt.uri.monitor = paho:monitor?brokerUrl=tcp://broker-amq-mqtt-0-svc:1883
%dev.mqtt.uri.monitor = paho:monitor


# AI/ML engine connectivity
endpoint.detections.host = http:tf-server:8501
%dev.endpoint.detections.host = https:tf-server-edge1.apps.cluster-qzsg7.qzsg7.sandbox1935.opentlc.com

# AI/ML engine connectivity
endpoint.price.host = http:price-engine:80
%dev.endpoint.price.host = http:price-engine-edge1.apps.cluster-qzsg7.qzsg7.sandbox1935.opentlc.com

# Training options configuration
camel.uri.config.training=language:constant:resource:file:/deployments/config/training-options.json
%dev.camel.uri.config.training=language:constant:resource:classpath:local-training-options.json

camel.uri.s3=aws2-s3:\\$\{exchangeProperty.bucket\}
%dev.camel.uri.s3=file:target/s3-\\$\{exchangeProperty.bucket\}/images/\\$\{exchangeProperty.product\}

# Central system where to push ZIP training data
camel.uri.feeder=http:feeder:80/zip
%dev.camel.uri.feeder=file:target/zip

# Processor to read training data
camel.uri.direct.datasource=direct:zip-service-read-s3
%dev.camel.uri.direct.datasource=direct:zip-service-read-filesystem

# S3 connectivity
camel.component.aws2-s3.accessKey=minio
camel.component.aws2-s3.secretKey=minio123
camel.component.aws2-s3.region=us-east-1
# %dev.camel.component.aws2-s3.uriEndpointOverride=https://YOUR_MINIO_ROUTE
%dev.camel.component.aws2-s3.uriEndpointOverride=https://minio-api-edge1.apps.cluster-qzsg7.qzsg7.sandbox1935.opentlc.com
camel.component.aws2-s3.uriEndpointOverride=http://minio-service:9000
camel.component.aws2-s3.overrideEndpoint=true
camel.component.aws2-s3.useDefaultCredentialsProvider=false
camel.component.aws2-s3.forcePathStyle=true


backend.simulator=false
%dev.backend.simulator=true

# filter to accept detections
score.accuracy=.6
quarkus.keycloak.policy-enforcer.enable=true
